// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/ljfranklin/service-canary/adapters"
	"github.com/ljfranklin/service-canary/service-factory"
)

type FakeServiceFactory struct {
	GetAllServicesStub        func() []adapters.Adapter
	getAllServicesMutex       sync.RWMutex
	getAllServicesArgsForCall []struct{}
	getAllServicesReturns     struct {
		result1 []adapters.Adapter
	}
}

func (fake *FakeServiceFactory) GetAllServices() []adapters.Adapter {
	fake.getAllServicesMutex.Lock()
	fake.getAllServicesArgsForCall = append(fake.getAllServicesArgsForCall, struct{}{})
	fake.getAllServicesMutex.Unlock()
	if fake.GetAllServicesStub != nil {
		return fake.GetAllServicesStub()
	} else {
		return fake.getAllServicesReturns.result1
	}
}

func (fake *FakeServiceFactory) GetAllServicesCallCount() int {
	fake.getAllServicesMutex.RLock()
	defer fake.getAllServicesMutex.RUnlock()
	return len(fake.getAllServicesArgsForCall)
}

func (fake *FakeServiceFactory) GetAllServicesReturns(result1 []adapters.Adapter) {
	fake.GetAllServicesStub = nil
	fake.getAllServicesReturns = struct {
		result1 []adapters.Adapter
	}{result1}
}

var _ service_factory.ServiceFactory = new(FakeServiceFactory)
